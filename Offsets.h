#pragma once

class Offsets
{
public:
	// flanne.Health
	std::vector<unsigned int> maxHP =				{ 0x178,0x40,0x30,0x30,0x68,0x28,0x50 };
	std::vector<unsigned int> HP =					{ 0x178,0x40,0x30,0x30,0x68,0x28,0x54 };
	std::vector<unsigned int> isInvincible =		{ 0x178,0x40,0x30,0x30,0x68,0x28,0x18,0x18 };
	// flanne.Ammo
	std::vector<unsigned int> Ammo =				{ 0x178,0x40,0x70,0x0,0xD0,0x60,0x40 };
	std::vector<unsigned int> infiniteAmmo =		{ 0x178,0x40,0x70,0x0,0xD0,0x60,0x38,0x18 };
	// flanne.PlayerController
	std::vector<unsigned int> movementSpeed =		{ 0x178,0x40,0x90,0xC8,0x18,0x60,0xB0 };
	// flanne.Player.PlayerXP
	std::vector<unsigned int> level =			    { 0x178,0x50,0xA8,0xD0,0x10,0x60,0x38 };
	std::vector<unsigned int> xp =				    { 0x178,0x50,0xA8,0xD0,0x10,0x60,0x3C };
	// flanne.StatMod
	std::vector<unsigned int> flatBonus =			{ 0x178,0x50,0xD0,0x10,0x60,0x30,0x18 };
	std::vector<unsigned int> multiplierReduction = { 0x178,0x50,0xD0,0x10,0x60,0x30,0x20 };
	std::vector<unsigned int> multiplierBonus =	    { 0x178,0x50,0xD0,0x10,0x60,0x30,0x1C };
	// flanne.GunData
	std::vector<unsigned int> damage =				{ 0x218,0x180,0x10,0x60,0x48 };
	std::vector<unsigned int> shootCooldown =		{ 0x218,0x180,0x10,0x60,0x4C };
	std::vector<unsigned int> maxAmmo =				{ 0x218,0x180,0x10,0x60,0x50 };
	std::vector<unsigned int> reloadDuration =		{ 0x218,0x180,0x10,0x60,0x54 };
	std::vector<unsigned int> numOfProjectiles =	{ 0x218,0x180,0x10,0x60,0x58 };
	std::vector<unsigned int> spread =				{ 0x218,0x180,0x10,0x60,0x5C };
	std::vector<unsigned int> knokback =			{ 0x218,0x180,0x10,0x60,0x60 };
	std::vector<unsigned int> projectileSpeed =		{ 0x218,0x180,0x10,0x60,0x64 };
	std::vector<unsigned int> bounce =				{ 0x218,0x180,0x10,0x60,0x68 };
	std::vector<unsigned int> piercing =			{ 0x218,0x180,0x10,0x60,0x6C };
	std::vector<unsigned int> burnChance =			{ 0x218,0x180,0x10,0x60,0x70 };
	std::vector<unsigned int> inaccuracy =			{ 0x218,0x180,0x10,0x60,0x74 };
	std::vector<unsigned int> isSummonGun =			{ 0x218,0x180,0x10,0x60,0x78 };
	
};

extern Offsets* offsets;

